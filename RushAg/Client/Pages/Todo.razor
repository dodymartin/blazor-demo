@page "/todo"
@inject AppState state

<PageTitle>To Do</PageTitle>

<div class="main">
    <h1>To Do List</h1>

    <TableView Items=state.TodoNotCompleted TItem="TodoItem">
        <TableHeading>
            <tr>
                <th scope="col" style="width : 5%"/>
                <th scope="col" style="width:70%">Name</th>
                <th scope="col" style="width:20%">Create Date</th>
                <th scope="col" style="width:5%"/>
            </tr>
        </TableHeading>
        <TableBody>
            <tr onclick=@(() => SetCurrentTodo(context))>
                <td>
                    <div class="round">
                        <input @key="context" type="checkbox" checked="@context.IsComplete" id="@context.Id" onchange="@(() => state.ToggleComplete(context))"/>
                        <label for="@context.Id"></label>
                    </div>
                </td>
                <td>@context.Name</td>
                <td>@context.CreateDate</td>
                <td><button class="btn btn-danger"><i class="oi oi-trash" style="color:black" onclick="@(() => state.DeleteTodo(context))"/></button></td>
            </tr>
        </TableBody>
    </TableView>

    <h1>Completed</h1>

    <TableView Items=state.TodoCompleted TItem="TodoItem">
        <TableHeading>
            <tr>
                <th scope="col" style="width : 5%"/>
                <th scope="col" style="width:70%">Name</th>
                <th scope="col" style="width:20%">Complete Date</th>
                <th scope="col" style="width:5%"/>
            </tr>
        </TableHeading>
        <TableBody>
            <tr onclick=@(() => SetCurrentTodo(context))>
                <td>
                    <div class="round">
                        <input @key="context" type="checkbox" checked="@context.IsComplete" id="@context.Id" onchange="@(() => state.ToggleComplete(context))"/>
                        <label for="@context.Id"></label>
                    </div>
                </td>
                <td class="completed-name">@context.Name</td>
                <td>@context.CompleteDate</td>
                <td><button class="btn btn-danger"><i class="oi oi-trash" style="color:black" onclick="@(() => state.DeleteTodo(context))"/></button></td>
            </tr>
        </TableBody>
    </TableView>

    <div>
        <AddTodoForm OnSave="state.AddTodo" />
    </div>
</div>

<div class="rightbar">
    @if (currentTodo != null)
    {
        <TodoUpdateForm
            Todo="currentTodo"
            OnCancel="CancelUpdate"
            OnSave="state.UpdateTodo" />
    }
</div>

@code {

    private TodoItem? currentTodo = null;

    protected override async Task OnInitializedAsync()
    {
        state.OnChange += StateHasChanged;
        await state.GetTodos();
    }

    private void CancelUpdate()
    {
        currentTodo = null;
        StateHasChanged();
    }

    private void SetCurrentTodo(TodoItem todo)
    {
        currentTodo = todo;
        StateHasChanged();
    }
}
