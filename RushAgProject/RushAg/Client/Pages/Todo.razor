@page "/todo"
@inject AppState state

<PageTitle>To Do</PageTitle>

@if (@state.IsLoading)
{
    <h3>Loading....</h3>
}
else
{
    <div class="d-flex">
        <div class="d-flex flex-column flex-fill">
            <h3>To Do List</h3>
            <TableView Items="@state.TodoNotCompleted" Context="todo" TItem="TodoItemDto">
                <TableHeading>
                    <tr>
                        <th scope="col" style="width : 5%" />
                        <th scope="col" style="width:70%">Name</th>
                        <th scope="col" style="width:20%">Create Date</th>
                        <th scope="col" style="width:5%" />
                    </tr>
                </TableHeading>
                <TableBody>
                    <tr>
                        <td>
                            <div class="round">
                                <input @key="todo" type="checkbox" checked="@todo.IsComplete" id="@todo.TodoItemId" onchange="@(() => state.ToggleComplete(todo))" />
                                <label for="@todo.TodoItemId"></label>
                            </div>
                        </td>
                        <td onclick=@(() => SetCurrentTodo(todo))>@todo.Name</td>
                        <td onclick=@(() => SetCurrentTodo(todo))>@todo.CreateDate</td>
                        <td><button class="btn btn-danger"><i class="oi oi-trash" style="color:black" onclick="@(() => state.DeleteTodo(todo))" /></button></td>
                    </tr>
                </TableBody>
            </TableView>

            <button class="btn btn-primary col-1 m-3" type="button" data-bs-toggle="collapse" data-bs-target="#complete" aria-expanded="false" aria-controls="complete">> Completed</button>
            <div class="collapse" id="complete">
                <TableView Items="@state.TodoCompleted" Context="todo">
                    <TableHeading>
                        <tr>
                            <th scope="col" style="width : 5%" />
                            <th scope="col" style="width:70%">Name</th>
                            <th scope="col" style="width:20%">Complete Date</th>
                            <th scope="col" style="width:5%" />
                        </tr>
                    </TableHeading>
                    <TableBody>
                        <tr>
                            <td>
                                <div class="round">
                                    <input @key="todo" type="checkbox" checked="@todo.IsComplete" id="@todo.TodoItemId" onchange="@(() => state.ToggleComplete(todo))" />
                                    <label for="@todo.TodoItemId"></label>
                                </div>
                            </td>
                            <td class="completed-name">@todo.Name</td>
                            <td>@todo.CompleteDate</td>
                            <td><button class="btn btn-danger"><i class="oi oi-trash" style="color:black" onclick="@(() => state.DeleteTodo(todo))" /></button></td>
                        </tr>
                    </TableBody>
                </TableView>
            </div>

            <div>
                <AddTodoForm OnSave="state.AddTodo" />
            </div>
        </div>
        @if (state.CurrentTodo != null)
        {
            <div class="d-flex flex-column flex-lg-fill p-2 m-2">

                <TodoUpdateForm Todo="state.CurrentTodo"
                        OnCancel="CancelUpdate"
                        OnSave="state.UpdateTodo"
                        OnTodoStepSave="state.AddStep"/>

            </div>
        }
    </div>
}


@code {

    protected override async Task OnInitializedAsync()
    {
        state.OnChange += StateHasChanged;
        await state.GetTodos();
    }

    private void CancelUpdate()
    {
        state.CurrentTodo = null;
        StateHasChanged();
    }

    private void SetCurrentTodo(TodoItemDto todo)
    {
        state.CurrentTodo = todo;
        StateHasChanged();
    }
}
