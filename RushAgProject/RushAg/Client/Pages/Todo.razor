@page "/todo"
@inject AppState state

<PageTitle>To Do</PageTitle>

@if (@state.IsLoading)
{
    <h3>Loading....</h3>
}
else
{
    <h3 class="mb-3">To Do List</h3>

    @foreach(var todo in state.TodoNotCompleted)
    {
        <TodoView 
            Todo="@todo"
            OnDelete="@state.DeleteTodo"
            OnToggleComplete="@state.ToggleComplete"/>    
    }

    @foreach(var todo in state.TodoCompleted)
    {
        <TodoView Todo="@todo"
          OnDelete="@state.DeleteTodo"
          OnToggleComplete="@state.ToggleComplete" />
    }
    <AddTodoForm OnSave="state.AddTodo" />
}

@code {

    protected override async Task OnInitializedAsync()
    {
        state.OnChange += StateHasChanged;
        await state.GetTodos();
    }

    private void CancelUpdate()
    {
        state.CurrentTodo = null;
        StateHasChanged();
    }

    private void SetCurrentTodo(TodoItemDto todo)
    {
        state.CurrentTodo = todo;
        StateHasChanged();
    }
}
