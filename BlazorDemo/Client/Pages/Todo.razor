@page "/todo"
@inject TodoService todoService

<PageTitle>To Do</PageTitle>

@if (@todoService.IsLoading)
{
    <h3>Loading....</h3>
}
else
{
    <h4>@($"To Do List ")</h4>

    <p>@($"({todoService.TodoCompleted.Count} / {todoService.TodoNotCompleted.Count + todoService.TodoCompleted.Count})")</p>

    <TableView Items="@todoService.TodoNotCompleted"
           Context="todo"
           TItem="TodoItemDto">
        <TableHeading>
            <TodoTableHeading />
        </TableHeading>
        <TableBody>
            <TodoTableBody Todo="@todo" />
        </TableBody>
    </TableView>

    @if (todoService.TodoCompleted.Any())
    {
        <button class="btn btn-primary" @onclick="ToggleShowComplete">
            Show Complete
            <span class="p-0">
                @if (_showCompleted)
                {
                    <icon />
                }
                else
                {
                    <icon />
                }
            </span>

        </button>

        @if (_showCompleted)
        {
            <TableView Items="@todoService.TodoCompleted"
           Context="todo"
           TItem="TodoItemDto">
                <TableHeading>
                    <TodoTableHeading ShowCompleteDate="@true" />
                </TableHeading>
                <TableBody>
                    <TodoTableBody Todo="@todo"
                       ShowCompleteDate="@true" />
                </TableBody>
            </TableView>

        }
    }
    <div class="position-fixed">
        <AddTodoForm OnSave="todoService.AddTodo" />
    </div>
}

@code {
    private bool _showCompleted = false;

    protected override async Task OnInitializedAsync()
    {
        todoService.OnChange += StateHasChanged;
        await todoService.GetTodos();
    }

    private void CancelUpdate()
    {
        todoService.CurrentTodo = null;
        StateHasChanged();
    }

    private void SetCurrentTodo(TodoItemDto todo)
    {
        todoService.CurrentTodo = todo;
        StateHasChanged();
    }

    private void ToggleShowComplete() => _showCompleted = !_showCompleted;

}
